<?xml version="1.0" encoding="UTF-8"?>
<xp:view xmlns:xp="http://www.ibm.com/xsp/core"
	xmlns:xp_1="http://www.ibm.com/xsp/coreex">
	<xp:this.dataContexts>
		<xp:dataContext var="adjacentNodeKeyItemsFilter">
			<xp:this.value><![CDATA[#{javascript:		
		var listAdjacentNodeAttributes:java.util.List = soNBOManager.getAdjacentNodeFilterableAttributes(context.getLocale());
		var newItemList:java.util.List = new java.util.ArrayList();
		for(var i=0;i<listAdjacentNodeAttributes.size();i++) {
			var vItem:java.util.Vector = listAdjacentNodeAttributes.get(i);
			var label = vItem.get(0) + " (" + vItem.get(1) + ")";
			if(context.getLocale().getLanguage().equals("de")) {
				label = vItem.get(2) + " (" + vItem.get(1) + ")";  
			}
			newItemList.add(label + "|" + vItem.get(0) + "," + vItem.get(1));
		}
		return newItemList.toArray();}]]></xp:this.value>
		</xp:dataContext>
	</xp:this.dataContexts>
	<xp:this.resources>
		<xp:dojoModule name="dojox.form.RangeSlider"></xp:dojoModule>
	</xp:this.resources>
	<xp:panel styleClass="sbo-widget-container">
		<h4 class="sbo-widget-heading">
			<xp:label value="#{javascript:soNBOManager.getTranslationBundle()['filter']}" id="label5"></xp:label>
		</h4>
		<div class="sbo-widget-container-inner">
			<xp:panel id="activefilters">
				<div>
					<xp:label value="#{javascript:soNBOManager.getTranslationBundle()['filters_active']}" id="label1"
						styleClass="sbo-heading-4">
					</xp:label>
				</div>
				<xp:panel id="activefilterarea"
					styleClass="sbo-filter-activefilterarea">
					<xp:repeat var="filter"
						value="#{javascript:soNBOManager.filterService.getFilterList();}">
						<div>
							<ol>
								<li>
									<xp:label id="label6">
										<xp:this.value><![CDATA[#{javascript:var attrName = filter.get(1);
		if(context.getLocale().getLanguage().equals("de")) {
			var result = @DbLookup("", "translations", attrName, "translationGerman");
			attrName = (typeof result == "string") ? result : attrName;
		}
		var filterTypeString = filter.get(4);
		var fiterDatatypeString = filter.get(2);
		var filterString = filterTypeString + " " + attrName + " (" + fiterDatatypeString + ")";
		var attrListString = filter.get(3);
		if(attrListString != "") {
			filterString = filterString + ": " + attrListString;
		}
		return filterString;}]]></xp:this.value>
									</xp:label>
									<xp:link escape="true" id="rmFilter"
										text="X" value="#" title="#{javascript:soNBOManager.getTranslationBundle()['filter_remove']}"
										styleClass="sbo-filter-link">
										<xp:this.attrs>
											<xp:attr name="id"
												value="#{javascript:filter.get(0)}">
											</xp:attr>
										</xp:this.attrs>
										<xp:eventHandler event="onclick"
											submit="true" refreshMode="partial" refreshId="page">
											<xp:this.action><![CDATA[#{javascript:var link:com.ibm.xsp.component.xp.XspOutputLink = this.getParent();
		var attrList:java.util.List = link.getAttrs();
		var attr:com.ibm.xsp.complex.Attr = attrList.get(0); 
		soNBOManager.filterService.remove(attr.getValue());												}]]>
											</xp:this.action>
											<xp:this.onComplete><![CDATA[enableDesign()]]></xp:this.onComplete>
										</xp:eventHandler>
									</xp:link>
								</li>
							</ol>
						</div>
					</xp:repeat>
				</xp:panel>
			</xp:panel>
			<xp:panel id="addfilter">
				<div>
					<xp:label value="#{javascript:soNBOManager.getTranslationBundle()['filter_add']}" id="label2"
						styleClass="sbo-heading-4">
					</xp:label>
				</div>
				<div>
					<xp:radioGroup id="filterType" defaultValue="true">
						<xp:selectItem itemLabel="#{javascript:soNBOManager.getTranslationBundle()['contains']}" itemValue="true"></xp:selectItem>
						<xp:selectItem itemLabel="#{javascript:soNBOManager.getTranslationBundle()['contains_not']}"
							itemValue="false">
						</xp:selectItem>
					</xp:radioGroup>
				</div>
				<xp:label value="#{javascript:soNBOManager.getTranslationBundle()['attribute_keys']}" id="label3" for="comboBoxKeys" />
				<xp:comboBox id="comboBoxKeys">
					<xp:selectItems>
						<xp:this.value><![CDATA[#{javascript:adjacentNodeKeyItemsFilter}]]></xp:this.value>
					</xp:selectItems>
					<xp:eventHandler event="onchange" submit="true"
						refreshMode="partial" refreshId="listBoxValues">
					</xp:eventHandler>
				</xp:comboBox>
				<xp:label value="#{javascript:soNBOManager.getTranslationBundle()['attribute_values']}" id="label4"
					for="listBoxValues" />
				<xp:listBox id="listBoxValues" multiple="true"
					rendered="#{javascript:return true;}" size="5">
					<xp:selectItems>
						<xp:this.value><![CDATA[#{javascript:	
			var filterKeyAttribute = getComponent("comboBoxKeys").getValue();
			if(filterKeyAttribute != null) {
				var filterKeyAttrArray = filterKeyAttribute.split(",");
			}else {
				var firstEntry = adjacentNodeKeyItemsFilter[0];
				if(firstEntry != null) {
				var firstEntrySplitted = firstEntry.split("|");
				var filterKeyAttrArray = firstEntrySplitted[1].split(",");
				}else {
					var filterKeyAttrArray = ["", ""];
				}
			}
			var resultList:java.util.List = soNBOManager.getAdjacentNodeAttributeValues(filterKeyAttrArray[0], filterKeyAttrArray[1]);
			return resultList.toArray().sort();
						}]]></xp:this.value>
					</xp:selectItems>
				</xp:listBox>
				<xp:panel id="rangeSliderSection" rendered="#{javascript:return false;}">
					<div id="rangeSlider"
						data-dojo-type="dojox.form.HorizontalRangeSlider"
						data-dojo-props="value:[2,6], minimum:0, maximum:20, showButtons: true, intermediateChanges:true, discreteValues: 21">
						<script type="dojo/method" data-dojo-event="onChange"
							data-dojo-args="value">
							dojo.byId("sliderValue").value = value;
						</script>
					</div>
				<p><input type="text" id="sliderValue" class="form-control" disabled="true"/></p>
				</xp:panel>
				<xp:button id="add_filter" value="#{javascript:soNBOManager.getTranslationBundle()['button-add_filter']}">
					<xp:eventHandler event="onclick" submit="true"
						refreshMode="partial" refreshId="page">
						<xp:this.action><![CDATA[#{javascript:
		// get control values
		var filterType = getComponent("filterType").getValue();
		var filterKeyAttribute = getComponent("comboBoxKeys").getValue();
		var filterKeyAttrArray = filterKeyAttribute.split(",");
		var valueItems = getComponent("listBoxValues").getValue();
		if(typeof valueItems == 'undefined') {
			valueItems = new java.util.ArrayList();
		}
		var valueItemList:util.java.List = java.util.Arrays.asList(valueItems);
		soNBOManager.filterService.add(filterType, filterKeyAttrArray[0], filterKeyAttrArray[1], valueItemList);}]]></xp:this.action>
					<xp:this.onComplete><![CDATA[enableDesign()]]></xp:this.onComplete>
					</xp:eventHandler>
				</xp:button>
			</xp:panel>
		</div>
	</xp:panel>
</xp:view>